define(["require", "exports", "lib/axios", "util/value-proxy", "member/authentication/FeatureCheckService", "compatibility/polyfill/url-search-params"], function (require, exports, axios_1, value_proxy_1, FeatureCheckService_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.CustomCourseService = exports.CustomCourseConstants = void 0;
    var CustomCourseConstants = (function () {
        function CustomCourseConstants() {
        }
        Object.defineProperty(CustomCourseConstants, "COURSE_LIMIT", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 15
        });
        Object.defineProperty(CustomCourseConstants, "ERRORS", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: {
                BLANK_TITLE: "Title is blank",
                DENIED: "Failed to fulfill request",
                DUPLICATE_TITLE: "There is already a course with this title",
                GENERIC: "An error occurred",
                INVALID: "Failed to send a valid request",
                LONG_TITLE: "Title is too long",
                MODULE_DUPLICATE_TITLE: "Title is already taken.",
                MODULE_LONG_TITLE: "Title is too long.",
                MODULE_SHORT_TITLE: "Title must be at least seven letters long.",
                NOT_FOUND: "Error reaching service",
                SHORT_TITLE: "Title is too short"
            }
        });
        Object.defineProperty(CustomCourseConstants, "MAX_TITLE_LENGTH", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 200
        });
        Object.defineProperty(CustomCourseConstants, "MIN_TITLE_LENGTH", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 7
        });
        return CustomCourseConstants;
    }());
    exports.CustomCourseConstants = CustomCourseConstants;
    var CustomCourseService = (function () {
        function CustomCourseService() {
            Object.defineProperty(this, "courseListProxy", {
                enumerable: true,
                configurable: true,
                writable: true,
                value: this.createCourseListProxy()
            });
        }
        Object.defineProperty(CustomCourseService.prototype, "createCourseListProxy", {
            enumerable: false,
            configurable: true,
            writable: true,
            value: function () {
                return new value_proxy_1.default([], function () {
                    return FeatureCheckService_1.featureCheckService.hasFeature("FEATURE_CUSTOM_COURSES")
                        .then(function (hasCustomCourseFeature) {
                        if (!hasCustomCourseFeature) {
                            return Promise.resolve([]);
                        }
                        return axios_1.default.get("/academy/custom/course-list.ajax")
                            .then(function (res) {
                            var courseList = res.data;
                            for (var i = 0; i < courseList.length; i++) {
                                var course = courseList[i];
                                if (typeof course.datePublished == "string") {
                                    course.datePublished = Date.parse(course.datePublished);
                                }
                            }
                            return courseList;
                        });
                    });
                }, "CUSTOM_COURSE_LIST");
            }
        });
        Object.defineProperty(CustomCourseService.prototype, "createCourse", {
            enumerable: false,
            configurable: true,
            writable: true,
            value: function (title, firstLessonAcademyAssetId) {
                var _this = this;
                var params = new URLSearchParams();
                params.append("title", title);
                params.append("description", "");
                if (firstLessonAcademyAssetId) {
                    params.append("firstLessonAcademyAssetId", firstLessonAcademyAssetId.toString());
                }
                return axios_1.default.post("/academy/custom/create-course.ajax", params)
                    .then(function (res) {
                    return res.data;
                })
                    .catch(function (e) {
                    throw _this.generateError(e.response);
                });
            }
        });
        Object.defineProperty(CustomCourseService.prototype, "addLessonToTopic", {
            enumerable: false,
            configurable: true,
            writable: true,
            value: function (lessonAcademyAssetId, topicAcademyAssetId, courseAcademyAssetId) {
                var _this = this;
                var params = new URLSearchParams();
                params.append("lessonAcademyAssetId", lessonAcademyAssetId.toString());
                params.append("topicAcademyAssetId", topicAcademyAssetId.toString());
                params.append("courseAcademyAssetId", courseAcademyAssetId.toString());
                return axios_1.default.post("/academy/custom/add-lesson-to-topic.ajax", params)
                    .then(function (res) {
                    return res.data;
                })
                    .catch(function (e) {
                    throw _this.generateError(e.response);
                });
            }
        });
        Object.defineProperty(CustomCourseService.prototype, "addLessonToEmptyCourse", {
            enumerable: false,
            configurable: true,
            writable: true,
            value: function (lessonAcademyAssetId, courseAcademyAssetId) {
                var _this = this;
                var params = new URLSearchParams();
                params.append("lessonAcademyAssetId", lessonAcademyAssetId.toString());
                params.append("courseAcademyAssetId", courseAcademyAssetId.toString());
                return axios_1.default.post("/academy/custom/add-lesson-to-empty-course.ajax", params)
                    .then(function (res) {
                    return res.data;
                })
                    .catch(function (e) {
                    throw _this.generateError(e.response);
                });
            }
        });
        Object.defineProperty(CustomCourseService.prototype, "generateError", {
            enumerable: false,
            configurable: true,
            writable: true,
            value: function (response) {
                var displayError = CustomCourseConstants.ERRORS.GENERIC;
                var errorCode = "CUSTOM_COURSE_MODULE__GENERIC";
                if (response.status === 400) {
                    if (response.data.titleIsBlank || response.data.titleIsTooShort) {
                        displayError = CustomCourseConstants.ERRORS.MODULE_SHORT_TITLE;
                        errorCode = "CUSTOM_COURSE_MODULE__SHORT_TITLE";
                    }
                    else if (response.data.titleIsTooLong) {
                        displayError = CustomCourseConstants.ERRORS.MODULE_LONG_TITLE;
                        errorCode = "CUSTOM_COURSE_MODULE__LONG_TITLE";
                    }
                    else {
                        displayError = CustomCourseConstants.ERRORS.INVALID;
                    }
                }
                else if (response.status === 403 || response.status === 0) {
                    displayError = CustomCourseConstants.ERRORS.DENIED;
                }
                else if (response.status === 404) {
                    displayError = CustomCourseConstants.ERRORS.NOT_FOUND;
                }
                else if (response.status === 409) {
                    displayError = CustomCourseConstants.ERRORS.MODULE_DUPLICATE_TITLE;
                    errorCode = "CUSTOM_COURSE_MODULE__DUPLICATE_TITLE";
                }
                var studyError = new Error();
                studyError.errorCode = errorCode;
                studyError.displayError = displayError;
                return studyError;
            }
        });
        Object.defineProperty(CustomCourseService.prototype, "addCustomCourseListListener", {
            enumerable: false,
            configurable: true,
            writable: true,
            value: function (callback) {
                this.courseListProxy.addValueListener(callback);
            }
        });
        Object.defineProperty(CustomCourseService, "instance", {
            enumerable: false,
            configurable: true,
            writable: true,
            value: function () {
                if (!CustomCourseService._instance) {
                    CustomCourseService._instance = new CustomCourseService();
                }
                return CustomCourseService._instance;
            }
        });
        return CustomCourseService;
    }());
    exports.CustomCourseService = CustomCourseService;
});

//# sourceMappingURL=CustomCourseService.js.map

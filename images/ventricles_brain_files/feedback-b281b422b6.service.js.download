define(["require", "exports", "angularDependency", "angularDependency", "angular/util/http-post-params-as-form.provider", "lib/angular/cookie", "util/remspect"], function (require, exports, angular) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.FeedbackService = exports.TargetUserType = void 0;
    var module = angular.module("feedback.service", ["ngCookies", "study.http-post-params-as-form"]);
    var TargetUserType;
    (function (TargetUserType) {
        TargetUserType["ANY"] = "ANY";
        TargetUserType["INSTRUCTOR"] = "INSTRUCTOR";
    })(TargetUserType = exports.TargetUserType || (exports.TargetUserType = {}));
    var FeedbackService = (function () {
        function FeedbackService($cookies, $http, $q, httpPostParamsAsFormConfig) {
            Object.defineProperty(this, "$cookies", {
                enumerable: true,
                configurable: true,
                writable: true,
                value: void 0
            });
            Object.defineProperty(this, "$http", {
                enumerable: true,
                configurable: true,
                writable: true,
                value: void 0
            });
            Object.defineProperty(this, "$q", {
                enumerable: true,
                configurable: true,
                writable: true,
                value: void 0
            });
            Object.defineProperty(this, "httpPostParamsAsFormConfig", {
                enumerable: true,
                configurable: true,
                writable: true,
                value: void 0
            });
            this.$cookies = $cookies;
            this.$http = $http;
            this.$q = $q;
            this.httpPostParamsAsFormConfig = httpPostParamsAsFormConfig;
        }
        Object.defineProperty(FeedbackService.prototype, "submitFeedback", {
            enumerable: false,
            configurable: true,
            writable: true,
            value: function (feedback) {
                return this.$http.post("/feedback/submit-feedback.ajax", feedback, this.httpPostParamsAsFormConfig)
                    .then(function (response) {
                    return;
                })
                    .catch(function (response) {
                    throw response.data;
                });
            }
        });
        Object.defineProperty(FeedbackService.prototype, "submitCancellationFeedback", {
            enumerable: false,
            configurable: true,
            writable: true,
            value: function (feedback) {
                return this.$http.post("/feedback/submit-cancellation-feedback.ajax", feedback, this.httpPostParamsAsFormConfig)
                    .then(function (response) {
                    return;
                })
                    .catch(function (response) {
                    throw response.data;
                });
            }
        });
        Object.defineProperty(FeedbackService.prototype, "submitInstantAnswersFeedback", {
            enumerable: false,
            configurable: true,
            writable: true,
            value: function (feedback) {
                return this.$http.post("/feedback/submit-instant-answer-feedback.ajax", feedback, this.httpPostParamsAsFormConfig)
                    .then(function (response) {
                    return;
                })
                    .catch(function (response) {
                    throw response.data;
                });
            }
        });
        Object.defineProperty(FeedbackService.prototype, "submitFeedbackNoScore", {
            enumerable: false,
            configurable: true,
            writable: true,
            value: function (feedback) {
                return this.$http.post("/feedback/submit-feedback-no-score.ajax", feedback, this.httpPostParamsAsFormConfig)
                    .then(function (response) {
                    return;
                })
                    .catch(function (response) {
                    throw response.data;
                });
            }
        });
        Object.defineProperty(FeedbackService.prototype, "submitAnswerDrillFeedback", {
            enumerable: false,
            configurable: true,
            writable: true,
            value: function (feedback) {
                return this.$http.post("/feedback/submit-answer-drill-feedback.ajax", feedback, this.httpPostParamsAsFormConfig)
                    .then(function (response) {
                    return;
                })
                    .catch(function (response) {
                    throw response.data;
                });
            }
        });
        Object.defineProperty(FeedbackService.prototype, "submitSearchResultsFeedback", {
            enumerable: false,
            configurable: true,
            writable: true,
            value: function (feedback) {
                return this.$http.post("/feedback/submit-search-results-feedback.ajax", feedback, this.httpPostParamsAsFormConfig)
                    .then(function (response) { return response.data['feedbackId']; })
                    .catch(function (response) { throw response.data; });
            }
        });
        Object.defineProperty(FeedbackService.prototype, "submitTodoListFeedback", {
            enumerable: false,
            configurable: true,
            writable: true,
            value: function (feedback) {
                return this.$http.post("/member/todo/submit-feedback.ajax", feedback, this.httpPostParamsAsFormConfig)
                    .then(function (response) {
                    return;
                })
                    .catch(function (response) {
                    throw response.data;
                });
            }
        });
        Object.defineProperty(FeedbackService.prototype, "submitBinaryAnswerFeedback", {
            enumerable: false,
            configurable: true,
            writable: true,
            value: function (feedback, userWasAnswerSubmitter) {
                return this.$http.post("/feedback/submit-binary-answer-feedback.ajax?userWasAnswerSubmitter=" + userWasAnswerSubmitter, feedback, this.httpPostParamsAsFormConfig)
                    .then(function (response) {
                    return;
                })
                    .catch(function (response) {
                    throw response.data;
                });
            }
        });
        Object.defineProperty(FeedbackService.prototype, "updateFeedback", {
            enumerable: false,
            configurable: true,
            writable: true,
            value: function (feedback) {
                return this.$http.post("/feedback/update-feedback.ajax", feedback, this.httpPostParamsAsFormConfig)
                    .then(function () { return; })
                    .catch(function (response) { throw response.data; });
            }
        });
        Object.defineProperty(FeedbackService.prototype, "dismissFeedback", {
            enumerable: false,
            configurable: true,
            writable: true,
            value: function () {
                return this.$http.post("/feedback/dismiss-feedback.ajax", {})
                    .then(function (response) {
                    return;
                })
                    .catch(function (response) {
                    throw response.data;
                });
            }
        });
        Object.defineProperty(FeedbackService, "$inject", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ["$cookies", "$http", "$q", "httpPostParamsAsFormConfig"]
        });
        return FeedbackService;
    }());
    exports.FeedbackService = FeedbackService;
    module.service("FeedbackService", FeedbackService);
});

//# sourceMappingURL=feedback.service.js.map

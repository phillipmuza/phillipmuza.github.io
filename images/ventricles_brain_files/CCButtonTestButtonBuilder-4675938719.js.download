var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
define(["require", "exports", "mobx-react", "react", "eureka/EurekaButton"], function (require, exports, mobx_react_1, React, EurekaButton_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.CCRegButton = void 0;
    var colorVariationToClassNameMap = {
        "control": "",
        "mango": "cc-reg-button--mango",
        "navy": "cc-reg-button--navy",
        "blue": "cc-reg-button--blue",
        "teal": "cc-reg-button--teal"
    };
    var copyVariationToDisplayTextMap = {
        "control": "Join Now",
        "join": "Join Today",
        "create": "Create Your Account",
        "sign": "Sign Up Now",
        "start": "Start Learning",
    };
    exports.CCRegButton = (0, mobx_react_1.observer)(React.forwardRef(function (props, forwardedRef) {
        var colorVariation = props.colorVariation, copyVariation = props.copyVariation, className = props.className, otherProps = __rest(props, ["colorVariation", "copyVariation", "className"]);
        return React.createElement(EurekaButton_1.EurekaButton, __assign({ className: "".concat(className, " ").concat(colorVariationToClassNameMap[colorVariation]), ref: forwardedRef }, otherProps),
            React.createElement("b", null, copyVariationToDisplayTextMap[copyVariation]));
    }));
});

//# sourceMappingURL=CCButtonTestButtonBuilder.js.map

define(["require", "exports", "angularDependency"], function (require, exports, angular) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ngServiceWrapper = void 0;
    function ngServiceWrapper(service) {
        var proto = Object.getPrototypeOf(service);
        var names = Object.getOwnPropertyNames(proto);
        function RET() { }
        var newProto = Object.getPrototypeOf(RET);
        angular.injector(["ng"]).invoke([
            "$q", "$rootScope", function ($q, $rootScope) {
                var _loop_2 = function (name_1) {
                    if (typeof proto[name_1] === "function") {
                        newProto[name_1] = function () {
                            var args = Array.prototype.map.call(arguments, function (callbackMaybe) {
                                if (typeof callbackMaybe === "function") {
                                    return function () {
                                        var callbackArgs = arguments;
                                        $rootScope.$apply(function () {
                                            callbackMaybe(callbackArgs);
                                        });
                                    };
                                }
                                else {
                                    return callbackMaybe;
                                }
                            });
                            var promiseMaybe = service[name_1].apply(service, args);
                            if (promiseMaybe.hasOwnProperty("then")) {
                                var deferred_1 = $q.defer();
                                promiseMaybe.then(function (r) { return deferred_1.resolve(r); });
                                return deferred_1.promise;
                            }
                            else {
                                return promiseMaybe;
                            }
                        };
                    }
                    else {
                        Object.defineProperty(RET, name_1, {
                            get: function () { return proto[name_1]; }
                        });
                    }
                };
                for (var _i = 0, names_1 = names; _i < names_1.length; _i++) {
                    var name_1 = names_1[_i];
                    _loop_2(name_1);
                }
            }
        ]);
        var instanceNames = Object.getOwnPropertyNames(service);
        var _loop_1 = function (name_2) {
            Object.defineProperty(newProto, name_2, {
                get: function () { return service[name_2]; }
            });
        };
        for (var _i = 0, instanceNames_1 = instanceNames; _i < instanceNames_1.length; _i++) {
            var name_2 = instanceNames_1[_i];
            _loop_1(name_2);
        }
        return RET;
    }
    exports.ngServiceWrapper = ngServiceWrapper;
});

//# sourceMappingURL=ngServiceWrapper.js.map
